# Generated by Django 3.1.5 on 2021-02-05 08:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AllInOne',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merk', models.CharField(max_length=30)),
                ('item', models.CharField(max_length=100)),
                ('tipe', models.CharField(max_length=50)),
                ('phase', models.CharField(choices=[('Single Phase', 'Single Phase'), ('Triple Phase', 'Triple Phase')], max_length=15)),
                ('kva', models.FloatField(help_text='Please enter the number in kVA')),
                ('kurs', models.CharField(choices=[('$', 'USD'), ('Euro', 'Euro')], max_length=5)),
                ('value', models.FloatField(help_text='Please insert the price in chosen foreign currency')),
                ('idr_value', models.FloatField()),
                ('contact', models.CharField(max_length=25)),
                ('period', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('entry_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aios', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['merk'],
            },
        ),
        migrations.CreateModel(
            name='Battery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merk', models.CharField(max_length=30)),
                ('item', models.CharField(max_length=100)),
                ('tipe', models.CharField(max_length=50)),
                ('keterangan', models.CharField(max_length=100)),
                ('v_per_cell', models.FloatField(help_text='Please insert the value in Volt per Cell.')),
                ('capacity', models.FloatField(help_text='Please insert the value in Ah.')),
                ('kwh', models.FloatField(help_text='Please insert the value in KWh.')),
                ('kurs', models.CharField(choices=[('$', 'USD'), ('Euro', 'Euro')], max_length=5)),
                ('value', models.FloatField(help_text='Please insert the price in chosen foreign currency.')),
                ('idr_value', models.FloatField()),
                ('contact', models.CharField(max_length=25)),
                ('period', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('entry_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batteries', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['merk'],
            },
        ),
        migrations.CreateModel(
            name='Inverter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merk', models.CharField(max_length=30)),
                ('tipe', models.CharField(max_length=50)),
                ('jenis', models.CharField(max_length=50)),
                ('aplikasi', models.CharField(choices=[('On-Grid', 'On-Grid'), ('Off-Grid', 'Off-Grid'), ('Hybrid', 'Hybrid')], max_length=50)),
                ('phase', models.CharField(choices=[('Single Phase', 'Single Phase'), ('Triple Phase', 'Triple Phase')], max_length=15)),
                ('kva', models.FloatField(help_text='Please enter the number in kVA')),
                ('kurs', models.CharField(choices=[('$', 'USD'), ('Euro', 'Euro')], max_length=5)),
                ('value', models.FloatField(help_text='Please insert the price in chosen foreign currency')),
                ('idr_value', models.FloatField()),
                ('contact', models.CharField(max_length=25)),
                ('period', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('entry_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inverters', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['merk'],
            },
        ),
        migrations.CreateModel(
            name='LVPanel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merk', models.CharField(max_length=30)),
                ('item', models.CharField(max_length=100)),
                ('tipe', models.CharField(max_length=50)),
                ('usd_value', models.FloatField()),
                ('contact', models.CharField(max_length=25)),
                ('period', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('entry_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lv_panels', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['merk'],
            },
        ),
        migrations.CreateModel(
            name='Monitoring',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merk', models.CharField(max_length=30)),
                ('item', models.CharField(max_length=100)),
                ('tipe', models.CharField(max_length=50)),
                ('usd_value', models.FloatField()),
                ('contact', models.CharField(max_length=25)),
                ('period', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('entry_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitors', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['merk'],
            },
        ),
        migrations.CreateModel(
            name='Mounting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merk', models.CharField(max_length=30)),
                ('item', models.CharField(max_length=100)),
                ('tipe', models.CharField(max_length=50)),
                ('kw_value', models.FloatField(help_text='Please insert the value in Wp.')),
                ('kurs', models.CharField(choices=[('$', 'USD'), ('E', 'Euro')], max_length=5)),
                ('wp_price', models.FloatField(help_text='Please insert the price per Wp.')),
                ('contact', models.CharField(max_length=25)),
                ('period', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('entry_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mountings', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['merk'],
            },
        ),
        migrations.CreateModel(
            name='MVPanel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merk', models.CharField(max_length=30)),
                ('item', models.CharField(max_length=100)),
                ('tipe', models.CharField(max_length=50)),
                ('usd_value', models.FloatField()),
                ('contact', models.CharField(max_length=25)),
                ('period', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('entry_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mv_panels', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['merk'],
            },
        ),
        migrations.CreateModel(
            name='PVModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merk', models.CharField(max_length=30)),
                ('item', models.CharField(max_length=100)),
                ('tipe', models.CharField(max_length=50)),
                ('kw_value', models.FloatField(help_text='Please insert the value in Wp.')),
                ('kurs', models.CharField(choices=[('$', 'USD'), ('E', 'Euro')], max_length=5)),
                ('wp_price', models.FloatField(help_text='Please insert the price per Wp.')),
                ('contact', models.CharField(max_length=25)),
                ('period', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('entry_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pv_modules', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['merk'],
            },
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merk', models.CharField(max_length=30)),
                ('item', models.CharField(max_length=100)),
                ('tipe', models.CharField(max_length=50)),
                ('usd_value', models.FloatField()),
                ('contact', models.CharField(max_length=25)),
                ('period', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('entry_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensors', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['merk'],
            },
        ),
        migrations.CreateModel(
            name='SolarCC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merk', models.CharField(max_length=30)),
                ('item', models.CharField(max_length=100)),
                ('tipe', models.CharField(max_length=50)),
                ('vbat', models.FloatField(help_text='Please insert the value in Volt.')),
                ('amperage', models.FloatField(help_text='Please insert the value in Ampere.')),
                ('wattmax', models.FloatField(help_text='Please insert the value in Watt.')),
                ('kurs', models.CharField(choices=[('$', 'USD'), ('Euro', 'Euro')], max_length=5)),
                ('value', models.FloatField(help_text='Please insert the price in chosen foreign currency.')),
                ('idr_value', models.FloatField()),
                ('contact', models.CharField(max_length=25)),
                ('period', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('entry_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solarccs', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['merk'],
            },
        ),
        migrations.CreateModel(
            name='Trafo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merk', models.CharField(max_length=30)),
                ('item', models.CharField(max_length=100)),
                ('tipe', models.CharField(max_length=50)),
                ('kva_value', models.FloatField(help_text='Please insert the value in kVA.')),
                ('price', models.FloatField()),
                ('year', models.CharField(choices=[('2010', '2010'), ('2011', '2011'), ('2012', '2012'), ('2013', '2013'), ('2014', '2014'), ('2015', '2015'), ('2016', '2016'), ('2017', '2017'), ('2018', '2018'), ('2019', '2019'), ('2020', '2020'), ('2021', '2021'), ('2022', '2022'), ('2023', '2023')], max_length=4)),
                ('distributor', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('entry_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transformers', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['merk'],
            },
        ),
        migrations.CreateModel(
            name='WeatherStation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merk', models.CharField(max_length=30)),
                ('item', models.CharField(max_length=100)),
                ('tipe', models.CharField(max_length=50)),
                ('usd_value', models.FloatField()),
                ('contact', models.CharField(max_length=25)),
                ('period', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('entry_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wstations', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['merk'],
            },
        ),
        migrations.CreateModel(
            name='WeatherStationHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='data_entry.weatherstation')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TrafoHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='data_entry.trafo')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SolarCCHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='data_entry.solarcc')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SensorHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='data_entry.sensor')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PVModuleHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='data_entry.pvmodule')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MVPanelHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='data_entry.mvpanel')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MountingHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='data_entry.mounting')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MonitoringHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='data_entry.monitoring')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LVPanelHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='data_entry.lvpanel')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InverterHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='data_entry.inverter')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BatteryHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='data_entry.battery')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AllInOneHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='data_entry.allinone')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
